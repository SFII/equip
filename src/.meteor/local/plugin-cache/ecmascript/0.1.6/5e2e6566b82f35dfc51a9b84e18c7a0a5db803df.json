{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function () {\n    return Meteor.subscribe('posts');\n  }\n});\n\nRouter.route('/', { name: 'postsList' });\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  data: function () {\n    return Posts.findOne(this.params._id);\n  }\n});\n\nRouter.route('/submit', { name: 'postSubmit' });\n\nvar requireLogin = function () {\n  if (!Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n};\n\nRouter.onBeforeAction('dataNotFound', { only: 'postPage' });\nRouter.onBeforeAction(requireLogin, { only: 'postSubmit' });","ast":null,"map":{"version":3,"sources":["/lib/router.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,SAAS,CAAC;AACf,gBAAc,EAAE,QAAQ;AACxB,iBAAe,EAAE,SAAS;AAC1B,kBAAgB,EAAE,UAAU;AAC5B,QAAM,EAAE,YAAW;AAAE,WAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;GAAE;CACzD,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;AACvC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE;AAC1B,MAAI,EAAE,UAAU;AAChB,MAAI,EAAE,YAAW;AAAE,WAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAAE;CAC5D,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC;;AAE9C,IAAI,YAAY,GAAG,YAAW;AAC5B,MAAI,CAAE,MAAM,CAAC,IAAI,EAAE,EAAE;AACnB,QAAI,MAAM,CAAC,SAAS,EAAE,EAAE;AACtB,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACnC,MAAM;AACL,UAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KAC7B;GACF,MAAM;AACL,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF,CAAA;;AAED,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC","file":"/lib/router.js.map","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function() { return Meteor.subscribe('posts'); }\n});\n\nRouter.route('/', {name: 'postsList'});\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/submit', {name: 'postSubmit'});\n\nvar requireLogin = function() {\n  if (! Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n}\n\nRouter.onBeforeAction('dataNotFound', {only: 'postPage'});\nRouter.onBeforeAction(requireLogin, {only: 'postSubmit'});\n"]},"hash":"5e2e6566b82f35dfc51a9b84e18c7a0a5db803df"}
