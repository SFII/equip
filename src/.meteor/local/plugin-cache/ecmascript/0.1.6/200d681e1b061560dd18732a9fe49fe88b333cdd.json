{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Posts = new Mongo.Collection('posts');\n\nMeteor.methods({\n  postInsert: function (postAttributes) {\n    check(this.userId, String);\n    check(postAttributes, {\n      title: String,\n      url: String\n    });\n\n    var postWithSameLink = Posts.findOne({ url: postAttributes.url });\n    if (postWithSameLink) {\n      return {\n        postExists: true,\n        _id: postWithSameLink._id\n      };\n    }\n\n    var user = Meteor.user();\n    var post = _.extend(postAttributes, {\n      userId: user._id,\n      author: user.username,\n      submitted: new Date()\n    });\n\n    var postId = Posts.insert(post);\n\n    return {\n      _id: postId\n    };\n  }\n});","ast":null,"map":{"version":3,"sources":["/lib/collections/posts.js"],"names":[],"mappings":"AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAGtC,MAAM,CAAC,OAAO,CAAC;AACb,YAAU,EAAE,UAAS,cAAc,EAAE;AACnC,SAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3B,SAAK,CAAC,cAAc,EAAE;AACpB,WAAK,EAAE,MAAM;AACb,SAAG,EAAE,MAAM;KACZ,CAAC,CAAC;;AAEH,QAAI,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,cAAc,CAAC,GAAG,EAAC,CAAC,CAAC;AAChE,QAAI,gBAAgB,EAAE;AACpB,aAAO;AACL,kBAAU,EAAE,IAAI;AAChB,WAAG,EAAE,gBAAgB,CAAC,GAAG;OAC1B,CAAA;KACF;;AAED,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;AAClC,YAAM,EAAE,IAAI,CAAC,GAAG;AAChB,YAAM,EAAE,IAAI,CAAC,QAAQ;AACrB,eAAS,EAAE,IAAI,IAAI,EAAE;KACtB,CAAC,CAAC;;AAEH,QAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEhC,WAAO;AACL,SAAG,EAAE,MAAM;KACZ,CAAC;GACH;CACF,CAAC,CAAC","file":"/lib/collections/posts.js.map","sourcesContent":["Posts = new Mongo.Collection('posts');\n\n\nMeteor.methods({\n  postInsert: function(postAttributes) {\n    check(this.userId, String);\n    check(postAttributes, {\n      title: String,\n      url: String\n    });\n\n    var postWithSameLink = Posts.findOne({url: postAttributes.url});\n    if (postWithSameLink) {\n      return {\n        postExists: true,\n        _id: postWithSameLink._id\n      }\n    }\n\n    var user = Meteor.user();\n    var post = _.extend(postAttributes, {\n      userId: user._id,\n      author: user.username,\n      submitted: new Date()\n    });\n\n    var postId = Posts.insert(post);\n\n    return {\n      _id: postId\n    };\n  }\n});\n"]},"hash":"200d681e1b061560dd18732a9fe49fe88b333cdd"}
