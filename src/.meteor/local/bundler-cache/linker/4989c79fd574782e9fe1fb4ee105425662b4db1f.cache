[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/collections/posts.js                                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nPosts = new Mongo.Collection('posts');                                 // 1\n                                                                       //\nMeteor.methods({                                                       // 3\n  postInsert: function (postAttributes) {                              // 4\n    check(this.userId, String);                                        // 5\n    check(postAttributes, {                                            // 6\n      title: String,                                                   // 7\n      url: String                                                      // 8\n    });                                                                //\n                                                                       //\n    if (Meteor.isServer) {                                             // 11\n      postAttributes.title += \"(server)\";                              // 12\n      // wait for 5 seconds                                            //\n      Meteor._sleepForMs(5000);                                        // 14\n    } else {                                                           //\n      postAttributes.title += \"(client)\";                              // 16\n    }                                                                  //\n                                                                       //\n    var postWithSameLink = Posts.findOne({ url: postAttributes.url });\n    if (postWithSameLink) {                                            // 20\n      return {                                                         // 21\n        postExists: true,                                              // 22\n        _id: postWithSameLink._id                                      // 23\n      };                                                               //\n    }                                                                  //\n                                                                       //\n    var user = Meteor.user();                                          // 27\n    var post = _.extend(postAttributes, {                              // 28\n      userId: user._id,                                                // 29\n      author: user.username,                                           // 30\n      submitted: new Date()                                            // 31\n    });                                                                //\n                                                                       //\n    var postId = Posts.insert(post);                                   // 34\n                                                                       //\n    return {                                                           // 36\n      _id: postId                                                      // 37\n    };                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/collections/posts.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/posts.js"],"names":[],"mappings":";;;;;;;;AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEtC,MAAM,CAAC,OAAO,CAAC;AACb,YAAU,EAAE,UAAS,cAAc,EAAE;AACnC,SAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3B,SAAK,CAAC,cAAc,EAAE;AACpB,WAAK,EAAE,MAAM;AACb,SAAG,EAAE,MAAM;KACZ,CAAC,CAAC;;AAEH,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,oBAAc,CAAC,KAAK,IAAI,UAAU,CAAC;;AAEnC,YAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC1B,MAAM;AACL,oBAAc,CAAC,KAAK,IAAI,UAAU,CAAC;KACpC;;AAED,QAAI,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,cAAc,CAAC,GAAG,EAAC,CAAC,CAAC;AAChE,QAAI,gBAAgB,EAAE;AACpB,aAAO;AACL,kBAAU,EAAE,IAAI;AAChB,WAAG,EAAE,gBAAgB,CAAC,GAAG;OAC1B;KACF;;AAED,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;AAClC,YAAM,EAAE,IAAI,CAAC,GAAG;AAChB,YAAM,EAAE,IAAI,CAAC,QAAQ;AACrB,eAAS,EAAE,IAAI,IAAI,EAAE;KACtB,CAAC,CAAC;;AAEH,QAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEhC,WAAO;AACL,SAAG,EAAE,MAAM;KACZ,CAAC;GACH;CACF,CAAC,CAAC,sE","file":"/lib/collections/posts.js","sourcesContent":["Posts = new Mongo.Collection('posts');\n\nMeteor.methods({\n  postInsert: function(postAttributes) {\n    check(this.userId, String);\n    check(postAttributes, {\n      title: String,\n      url: String\n    });\n\n    if (Meteor.isServer) {\n      postAttributes.title += \"(server)\";\n      // wait for 5 seconds\n      Meteor._sleepForMs(5000);\n    } else {\n      postAttributes.title += \"(client)\";\n    }\n\n    var postWithSameLink = Posts.findOne({url: postAttributes.url});\n    if (postWithSameLink) {\n      return {\n        postExists: true,\n        _id: postWithSameLink._id\n      }\n    }\n\n    var user = Meteor.user();\n    var post = _.extend(postAttributes, {\n      userId: user._id,\n      author: user.username,\n      submitted: new Date()\n    });\n\n    var postId = Posts.insert(post);\n\n    return {\n      _id: postId\n    };\n  }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/router.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nRouter.configure({                                                     // 1\n  layoutTemplate: 'layout',                                            // 2\n  loadingTemplate: 'loading',                                          // 3\n  notFoundTemplate: 'notFound',                                        // 4\n  waitOn: function () {                                                // 5\n    return Meteor.subscribe('posts');                                  // 5\n  }                                                                    //\n});                                                                    //\n                                                                       //\nRouter.route('/', { name: 'postsList' });                              // 8\nRouter.route('/posts/:_id', {                                          // 9\n  name: 'postPage',                                                    // 10\n  data: function () {                                                  // 11\n    return Posts.findOne(this.params._id);                             // 11\n  }                                                                    //\n});                                                                    //\n                                                                       //\nRouter.route('/submit', { name: 'postSubmit' });                       // 14\n                                                                       //\nvar requireLogin = function () {                                       // 16\n  if (!Meteor.user()) {                                                // 17\n    if (Meteor.loggingIn()) {                                          // 18\n      this.render(this.loadingTemplate);                               // 19\n    } else {                                                           //\n      this.render('accessDenied');                                     // 21\n    }                                                                  //\n  } else {                                                             //\n    this.next();                                                       // 24\n  }                                                                    //\n};                                                                     //\n                                                                       //\nRouter.onBeforeAction('dataNotFound', { only: 'postPage' });           // 28\nRouter.onBeforeAction(requireLogin, { only: 'postSubmit' });           // 29\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/router.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/router.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,SAAS,CAAC;AACf,gBAAc,EAAE,QAAQ;AACxB,iBAAe,EAAE,SAAS;AAC1B,kBAAgB,EAAE,UAAU;AAC5B,QAAM,EAAE,YAAW;AAAE,WAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;GAAE;CACzD,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;AACvC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE;AAC1B,MAAI,EAAE,UAAU;AAChB,MAAI,EAAE,YAAW;AAAE,WAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAAE;CAC5D,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC;;AAE9C,IAAI,YAAY,GAAG,YAAW;AAC5B,MAAI,CAAE,MAAM,CAAC,IAAI,EAAE,EAAE;AACnB,QAAI,MAAM,CAAC,SAAS,EAAE,EAAE;AACtB,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACnC,MAAM;AACL,UAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KAC7B;GACF,MAAM;AACL,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;CACF;;AAED,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;AAC1D,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC,gB","file":"/lib/router.js","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function() { return Meteor.subscribe('posts'); }\n});\n\nRouter.route('/', {name: 'postsList'});\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/submit', {name: 'postSubmit'});\n\nvar requireLogin = function() {\n  if (! Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n}\n\nRouter.onBeforeAction('dataNotFound', {only: 'postPage'});\nRouter.onBeforeAction(requireLogin, {only: 'postSubmit'});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/fixtures.js                                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nif (Posts.find().count() === 0) {                                      // 1\n  Posts.insert({                                                       // 2\n    title: 'Introducing Telescope',                                    // 3\n    url: 'http://sachagreif.com/introducing-telescope/'                // 4\n  });                                                                  //\n                                                                       //\n  Posts.insert({                                                       // 7\n    title: 'Meteor',                                                   // 8\n    url: 'http://meteor.com'                                           // 9\n  });                                                                  //\n                                                                       //\n  Posts.insert({                                                       // 12\n    title: 'The Meteor Book',                                          // 13\n    url: 'http://themeteorbook.com'                                    // 14\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/fixtures.js","sourceMap":{"version":3,"sources":["/server/fixtures.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;AAC9B,OAAK,CAAC,MAAM,CAAC;AACX,SAAK,EAAE,uBAAuB;AAC9B,OAAG,EAAE,8CAA8C;GACpD,CAAC,CAAC;;AAEH,OAAK,CAAC,MAAM,CAAC;AACX,SAAK,EAAE,QAAQ;AACf,OAAG,EAAE,mBAAmB;GACzB,CAAC,CAAC;;AAEH,OAAK,CAAC,MAAM,CAAC;AACX,SAAK,EAAE,iBAAiB;AACxB,OAAG,EAAE,0BAA0B;GAChC,CAAC,CAAC;CACJ,wE","file":"/server/fixtures.js","sourcesContent":["if (Posts.find().count() === 0) {\n  Posts.insert({\n    title: 'Introducing Telescope',\n    url: 'http://sachagreif.com/introducing-telescope/'\n  });\n\n  Posts.insert({\n    title: 'Meteor',\n    url: 'http://meteor.com'\n  });\n\n  Posts.insert({\n    title: 'The Meteor Book',\n    url: 'http://themeteorbook.com'\n  });\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/publications.js                                              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.publish('posts', function () {                                  // 1\n  return Posts.find();                                                 // 2\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/publications.js","sourceMap":{"version":3,"sources":["/server/publications.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,YAAW;AACjC,SAAO,KAAK,CAAC,IAAI,EAAE,CAAC;CACrB,CAAC,CAAC,sE","file":"/server/publications.js","sourcesContent":["Meteor.publish('posts', function() {\n  return Posts.find();\n});\n"]}}]